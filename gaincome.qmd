---
title: "Georgia Income"
editor: visual
---

---
tile: "gaincome"
author: "Julian Gorman"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  html:
    self-contained: true
    toc: true
    toc-location: left
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(tigris)
library(sf)
library(tidycensus)
library(htmltools)
library(janitor)
library(here)
library(mapview)
library(leafsync)
library(leaflet.extras2)
options(tigris_class = "sf")


```

```{r}

# uncomment to run, then recomment it out so you don't run it every time

# census_api_key("APIKEYCODE", install=TRUE)


```

*Here, I chose the list of variables that I wanted to analyze.*

```{r}

myvars <- c(totalpop = "B01003_001",
            medincome = "B19013_001",
            medage = "B01002_001"
)
```

*Here, I pulled the list of counties in Georgia and a list of counties in the U.S.*

```{r,include=FALSE}

ga_counties_withgeo <- get_acs(geography = "county",
                       variables = c(myvars),
                       state = "GA",
                       output = "wide",
                       geometry = TRUE)

ga_counties_withgeo
```

```{r}

all_counties_withgeo <- get_acs(geography = "county",
                       variables = c(myvars),
                       output = "wide",
                       geometry = TRUE)

all_counties_withgeo
```

```{r}
#remove MOE columns - they all end with "M"
ga_counties_withgeo <- ga_counties_withgeo %>%
  select(-ends_with("M"))

ga_counties_withgeo
```

```{r}
#remove that trailing "E"
colnames(ga_counties_withgeo) <- sub("E$", "", colnames(ga_counties_withgeo)) # $ means end of string only

ga_counties_withgeo
```

*Here I mapped Georgia counties by income, using mapview.*

```{r}

mapview(ga_counties_withgeo, zcol = "medincome")



```

*Here I changed the colors of the map to be lighter using color brewer.*

```{r}

mapview(ga_counties_withgeo, zcol = "medincome", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1)



```

*In the next two steps, I changed the darkness of the background.*

```{r}

mapviewOptions("basemaps.color.shuffle" = FALSE)


```

```{r}
# this changed the maps background from black to white
mapview(ga_counties_withgeo, zcol = "medincome", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1)



```

*In the next two steps, I built two maps, side-by-side, with one displaying Georgia's income demographics and the other displaying age demographics.*

```{r}

map_income <- mapview(ga_counties_withgeo, zcol = "medincome", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1)

map_age <- mapview(ga_counties_withgeo, zcol = "medage", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1)


```

```{r}

sync(map_income, map_age)


```

*In the following step, I added a slider feature to the maps, allowing both age and income to be displayed in one map, with an interactive slider allowing both demographics to be viewed.*

```{r}

map_income | map_age


```

*in the following step, I removed the legend blocking parts of the map.*

```{r}

mapview(ga_counties_withgeo, zcol = "medincome", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1,
         legend = FALSE, 
         label = FALSE, 
         popup = FALSE)


```

*In the following step, I developed labels that would display as hover text.*

```{r}

mylabel <- glue::glue("{ga_counties_withgeo$NAM} {ga_counties_withgeo$medincome}")


mapview(ga_counties_withgeo, zcol = "medincome", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1,
         label = mylabel)

```

*In the following three steps, I made the popups ineractive, only displaying the full values when clicked on.*

```{r}
mypopup <- glue::glue("<strong>{ga_counties_withgeo$NAM}</strong><br />
                      Total Population: {ga_counties_withgeo$totalpop}<br />
                      Median Income: {ga_counties_withgeo$medincome}") %>% 
  lapply(htmltools::HTML)

# mylabel <- glue::glue("{all_data$State} {all_data$PctChange10_20}%") %>%
#   lapply(htmltools::HTML)

```

```{r}

head(mypopup)

```

```{r}

mapview(ga_counties_withgeo, zcol = "medincome", 
         col.regions = RColorBrewer::brewer.pal(9, "Greens"), 
         alpha.regions = 1,
         popup = mypopup)

```
